{"ast":null,"code":"var _jsxFileName = \"/Users/juan.acuna/Code/go-react-challenge/src/frontend/src/components/Component1.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Component1 = () => {\n  _s();\n\n  const [data, setData] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  let part = 1;\n\n  const checkNotEmptyUndefinded = value => {\n    if (value === undefined || value === null || value === \"\") {\n      return false;\n    }\n\n    return true;\n  };\n\n  const checkObjectArrayString = value => {\n    // to be removed\n    if (typeof value === \"object\" && value.length > 0) {\n      return true;\n    }\n\n    if (typeof value === \"string\") {\n      return true;\n    }\n\n    return false;\n  }; // const ExplodePart = (part) => {\n  //   console.log(\"part: \", part);\n  //   if (typeof part === \"object\") {\n  //     console.log(\"part: is an object\");\n  //   } else if (typeof part === \"string\" || typeof part === \"number\") {\n  //     console.log(\"part: is a string or a number\");\n  //   } else {\n  //     console.log(\"part: is an array\");\n  //   }\n  //   // let element = \"\";\n  //   // if (typeof part === \"object\") {\n  //   //   console.log(\"parsing as an object\");\n  //   //   for (const [key, value] of Object.entries(part)) {\n  //   //     element =\n  //   //       element +\n  //   //       `\n  //   //     <li>\n  //   //       <span>\n  //   //         key: ${key} value ${value}\n  //   //       </span>\n  //   //     </li>`;\n  //   //   }\n  //   //   console.log(element);\n  //   // } else if (typeof part === \"string\") {\n  //   //   console.log(\"parsing as a string\");\n  //   //   return \"is string\";\n  //   // } else {\n  //   //   console.log(\"parsing as an array\");\n  //   //   return \"is array\";\n  //   // }\n  //   // return element;\n  // };\n\n\n  let config = {\n    method: \"get\",\n    url: `http://localhost:8080/part?id=${part}`,\n    headers: {}\n  };\n  useEffect(() => {\n    axios(config).then(function (response) {\n      setData(response.data);\n      setLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // const Kind = data?.kind;\n\n  !loading ? Object.entries(data).forEach(_ref => {\n    let [key, value] = _ref;\n    console.log(\"ENTRIES KEYS\", key);\n    console.log(\"ENTRIES VALUES\", value);\n    console.log(\"ENTRIES VALUES TYPE\", typeof value);\n\n    if (typeof value === \"object\" && value.length > 0) {\n      Object.entries(value).forEach(_ref2 => {\n        let [key2, value2] = _ref2;\n        console.log(\"ENTRIES KEYS2\", key2);\n        console.log(\"ENTRIES VALUES2\", value2);\n        console.log(\"ENTRIES VALUES2 TYPE\", typeof value2);\n      });\n    }\n\n    console.log(\"\");\n  }) : console.log(\"loading\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Metadata:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"APIVersion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}; // </div>}\n// </>;\n// };\n\n\n_s(Component1, \"xwEpm+jGYgVskrZfQ/kWUJg/gSI=\");\n\n_c = Component1;\nexport default Component1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Component1\");","map":{"version":3,"names":["React","useState","useEffect","axios","Component1","data","setData","loading","setLoading","part","checkNotEmptyUndefinded","value","undefined","checkObjectArrayString","length","config","method","url","headers","then","response","catch","error","console","log","Object","entries","forEach","key","key2","value2"],"sources":["/Users/juan.acuna/Code/go-react-challenge/src/frontend/src/components/Component1.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Component1 = () => {\n  const [data, setData] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  let part = 1;\n\n  const checkNotEmptyUndefinded = (value) => {\n    if (value === undefined || value === null || value === \"\") {\n      return false;\n    }\n    return true;\n  };\n\n  const checkObjectArrayString = (value) => {\n    // to be removed\n    if (typeof value === \"object\" && value.length > 0) {\n      return true;\n    }\n    if (typeof value === \"string\") {\n      return true;\n    }\n    return false;\n  };\n\n  // const ExplodePart = (part) => {\n  //   console.log(\"part: \", part);\n  //   if (typeof part === \"object\") {\n  //     console.log(\"part: is an object\");\n  //   } else if (typeof part === \"string\" || typeof part === \"number\") {\n  //     console.log(\"part: is a string or a number\");\n  //   } else {\n  //     console.log(\"part: is an array\");\n  //   }\n\n  //   // let element = \"\";\n  //   // if (typeof part === \"object\") {\n  //   //   console.log(\"parsing as an object\");\n  //   //   for (const [key, value] of Object.entries(part)) {\n  //   //     element =\n  //   //       element +\n  //   //       `\n  //   //     <li>\n  //   //       <span>\n  //   //         key: ${key} value ${value}\n  //   //       </span>\n  //   //     </li>`;\n  //   //   }\n  //   //   console.log(element);\n  //   // } else if (typeof part === \"string\") {\n  //   //   console.log(\"parsing as a string\");\n  //   //   return \"is string\";\n  //   // } else {\n  //   //   console.log(\"parsing as an array\");\n  //   //   return \"is array\";\n  //   // }\n  //   // return element;\n  // };\n\n  let config = {\n    method: \"get\",\n    url: `http://localhost:8080/part?id=${part}`,\n    headers: {},\n  };\n  useEffect(() => {\n    axios(config)\n      .then(function (response) {\n        setData(response.data);\n        setLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // const Kind = data?.kind;\n\n  !loading\n    ? Object.entries(data).forEach(([key, value]) => {\n        console.log(\"ENTRIES KEYS\", key);\n        console.log(\"ENTRIES VALUES\", value);\n        console.log(\"ENTRIES VALUES TYPE\", typeof value);\n\n        if (typeof value === \"object\" && value.length > 0) {\n          Object.entries(value).forEach(([key2, value2]) => {\n            console.log(\"ENTRIES KEYS2\", key2);\n            console.log(\"ENTRIES VALUES2\", value2);\n            console.log(\"ENTRIES VALUES2 TYPE\", typeof value2);\n          });\n        }\n        console.log(\"\");\n      })\n    : console.log(\"loading\");\n\n  return (\n    <>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <div>\n          {/* <div>Kind: {<ExplodePart part={Kind} />}</div> */}\n          {/* <div>Spec: {<ExplodePart part={data?.spec} />}</div> */}\n          <div>Status:</div>\n          <div>Metadata:</div>\n          <div>APIVersion:</div>\n          {/* {data?.map((item, index) => (\n            <div key={index}>\n              <h1>{item.name}</h1>\n              <p>{item.description}</p>\n            </div>\n          ))} */}\n        </div>\n      )}\n    </>\n  );\n};\n// </div>}\n// </>;\n// };\n\nexport default Component1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}