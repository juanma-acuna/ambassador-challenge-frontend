{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nrequire(\"./JsonToTable.css\");\n\nvar JsonToTableUtils_1 = require(\"./JsonToTableUtils\");\n\nvar JsonToTableUtils_2 = require(\"./JsonToTableUtils\");\n\nvar JsonToTable =\n/** @class */\nfunction (_super) {\n  __extends(JsonToTable, _super); // constructor\n\n\n  function JsonToTable(props, context) {\n    var _this = _super.call(this, props, context) || this;\n\n    _this.renderObject = function (obj, header, idx) {\n      var phrase = [];\n      var tmp;\n\n      if (header) {\n        phrase.push(_this.renderRowHeader(header));\n      }\n\n      var objType = JsonToTableUtils_2.default.getObjectType(obj);\n\n      switch (objType) {\n        case JsonToTableUtils_1.JSONObjectType.ObjectWithNonNumericKeys:\n          tmp = header ? React.createElement(\"table\", {\n            key: \"__j2t_tableObj\" + idx\n          }, React.createElement(\"tbody\", {\n            key: \"__j2t_bObj\" + idx\n          }, _this.renderRows(obj))) : _this.renderRows(obj);\n          break;\n\n        case JsonToTableUtils_1.JSONObjectType.Array:\n          tmp = header ? React.createElement(\"table\", {\n            key: \"__j2t_tableArr\" + idx\n          }, React.createElement(\"tbody\", {\n            key: \"__j2t_bArr\" + idx\n          }, _this.parseArray(obj))) : _this.parseArray(obj);\n          break;\n      }\n\n      phrase.push(tmp);\n      var retval = phrase.map(function (p) {\n        return p;\n      });\n      return header ? React.createElement(\"tr\", {\n        key: \"__j2t_trObj\" + idx\n      }, _this.renderCell({\n        content: retval,\n        colspan: 2\n      })) : retval;\n    };\n\n    _this.renderCell = function (params) {\n      var content = params.content,\n          colspan = params.colspan,\n          isHeader = params.isHeader;\n      var valueDisplay = isHeader ? React.createElement(\"strong\", null, content) : content;\n      return React.createElement(\"td\", {\n        colSpan: colspan ? colspan : 0,\n        key: \"__j2t_trObj\" + valueDisplay\n      }, valueDisplay);\n    };\n\n    _this.renderHeader = function (labels) {\n      return React.createElement(\"tr\", {\n        key: \"__j2t_trHeader\"\n      }, labels.map(function (v) {\n        return _this.renderCell({\n          content: v\n        });\n      }));\n    };\n\n    _this.renderValues = function (values) {\n      return React.createElement(\"tr\", {\n        key: \"__j2t_trArrString\"\n      }, values.map(function (k) {\n        return _this.renderCell({\n          content: k\n        });\n      }));\n    };\n\n    _this.renderRowValues = function (anArray, labels) {\n      return anArray.map(function (item, idx) {\n        return React.createElement(\"tr\", {\n          key: \"__j2t_Arr\" + idx.toString()\n        }, labels.map(function (k) {\n          var isValuePrimitive = JsonToTableUtils_2.default.getObjectType(item[k]) === JsonToTableUtils_1.JSONObjectType.Primitive;\n          return isValuePrimitive ? _this.renderCell({\n            content: item[k]\n          }) : _this.renderObject(item[k], k, idx);\n        }));\n      });\n    };\n\n    _this.parseArray = function (anArray) {\n      var phrase = [];\n      var labels = JsonToTableUtils_2.default.getUniqueObjectKeys(anArray);\n\n      if (JsonToTableUtils_2.default.checkLabelTypes(labels.labels) !== \"number\") {\n        phrase.push(_this.renderHeader(labels.labels));\n        phrase.push(_this.renderRowValues(anArray, labels.labels));\n      } else {\n        phrase.push(_this.renderValues(anArray));\n      }\n\n      return phrase;\n    };\n\n    _this.renderRow = function (k, v, idx) {\n      return React.createElement(\"tr\", {\n        key: \"__j2t_tr\" + idx\n      }, React.createElement(\"td\", {\n        key: \"__j2t_tdk\" + idx\n      }, React.createElement(\"strong\", null, k)), React.createElement(\"td\", {\n        key: \"__j2t_tdv\" + idx\n      }, v));\n    };\n\n    _this.renderRowHeader = function (label) {\n      return React.createElement(\"div\", {\n        key: \"__j2t_rw\" + label\n      }, React.createElement(\"strong\", null, label));\n    };\n\n    _this.renderRows = function (obj, labelKey) {\n      return Object.keys(obj).map(function (k, idx) {\n        var value = obj[k];\n        var isValuePrimitive = JsonToTableUtils_2.default.getObjectType(value) === JsonToTableUtils_1.JSONObjectType.Primitive; // render row when value is primitive otherwise inspect the value and make the key as header\n\n        var retval = isValuePrimitive ? _this.renderRow(k, value, idx) : _this.renderObject(value, k, idx);\n        return retval;\n      });\n    };\n\n    return _this;\n  }\n\n  JsonToTable.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: 'json-to-table'\n    }, React.createElement(\"table\", {\n      key: \"__j2t_root_table\"\n    }, React.createElement(\"tbody\", {\n      key: \"__j2t_root_tbody\"\n    }, this.renderObject(this.props.json, undefined, 0))));\n  };\n\n  return JsonToTable;\n}(React.Component);\n\nexports.default = JsonToTable;","map":{"version":3,"mappings":"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","names":["require","__extends","props","context","_super","_this","obj","header","idx","phrase","tmp","push","renderRowHeader","objType","JsonToTableUtils_2","getObjectType","JsonToTableUtils_1","ObjectWithNonNumericKeys","React","key","renderRows","Array","parseArray","retval","map","renderCell","content","colspan","params","isHeader","valueDisplay","colSpan","labels","v","values","k","anArray","item","toString","isValuePrimitive","Primitive","renderObject","getUniqueObjectKeys","checkLabelTypes","renderHeader","renderRowValues","renderValues","label","labelKey","Object","keys","value","renderRow","JsonToTable","className","json","undefined","Component"],"sources":["../../../../src/components/JsonToTable/JsonToTable.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}