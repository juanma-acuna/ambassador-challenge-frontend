{"ast":null,"code":"var _jsxFileName = \"/Users/juan.acuna/Code/go-react-challenge/src/frontend/src/components/Component2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import ReactDOM from \"react-dom\";\n\nimport { JsonToTable } from \"react-json-to-table\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Component2 = () => {\n  _s();\n\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true); // const myJson = {\n  //   kind: \"Service\",\n  //   spec: {\n  //     hostname: \"\",\n  //     selector: {\n  //       \"app.kubernetes.io/name\": \"ambassador\",\n  //       \"app.kubernetes.io/instance\": \"ambassador\",\n  //       matchLabels: {\n  //         hostname: \"\",\n  //       },\n  //     },\n  //     tlsSecret: {\n  //       name: \"\",\n  //     },\n  //     previewUrl: {\n  //       enabled: false,\n  //     },\n  //     acmeProvider: {\n  //       email: \"\",\n  //       authority: \"\",\n  //       registration: \"\",\n  //       privateKeySecret: {\n  //         name: \"\",\n  //       },\n  //     },\n  //     ambassador_id: null,\n  //     type: \"ClusterIP\",\n  //     ports: [\n  //       {\n  //         name: \"ambassador-admin\",\n  //         port: 8877,\n  //         protocol: \"TCP\",\n  //         containerPort: 0,\n  //         targetPort: \"admin\",\n  //         nodePort: 0,\n  //       },\n  //     ],\n  //     clusterIP: \"10.43.37.77\",\n  //     sessionAffinity: \"None\",\n  //     externalTrafficPolicy: \"\",\n  //     proto: \"\",\n  //     auth_service: \"\",\n  //     service: \"\",\n  //     volumes: null,\n  //     nodeName: \"\",\n  //     priority: 0,\n  //     dnsPolicy: \"\",\n  //     containers: null,\n  //     tolerations: null,\n  //     nodeSelector: {\n  //       \"beta.kubernetes.io/os\": \"\",\n  //     },\n  //     restartPolicy: \"\",\n  //     schedulerName: \"\",\n  //     serviceAccount: \"\",\n  //     securityContext: {\n  //       capabilities: {\n  //         add: null,\n  //         drop: null,\n  //       },\n  //       readOnlyRootFilesystem: false,\n  //       allowPrivilegeEscalation: false,\n  //       runAsUser: 0,\n  //     },\n  //     enableServiceLinks: false,\n  //     serviceAccountName: \"\",\n  //     terminationGracePeriodSeconds: 0,\n  //     affinity: {\n  //       podAntiAffinity: {\n  //         preferredDuringSchedulingIgnoredDuringExecution: null,\n  //       },\n  //     },\n  //     config: {\n  //       cepc: {\n  //         label: \"\",\n  //         address: \"\",\n  //         enabled: false,\n  //         account_id: \"\",\n  //       },\n  //     },\n  //     rewrite: \"\",\n  //     prefix: \"\",\n  //     prefix_regex: false,\n  //     regex_rewrite: {\n  //       pattern: \"\",\n  //       substitution: \"\",\n  //     },\n  //     add_response_headers: {\n  //       \"cache-control\": {\n  //         value: \"\",\n  //         append: false,\n  //       },\n  //     },\n  //   },\n  //   status: {\n  //     state: \"\",\n  //     tlsCertificateSource: \"\",\n  //     phase: \"\",\n  //     podIP: \"\",\n  //     hostIP: \"\",\n  //     podIPs: null,\n  //     qosClass: \"\",\n  //     startTime: \"0001-01-01T00:00:00Z\",\n  //     conditions: null,\n  //     containerStatuses: null,\n  //     loadBalancer: {},\n  //   },\n  //   metadata: {\n  //     uid: \"38cd6a7f-c3f0-4902-8cbb-b8fa628e44bd\",\n  //     name: \"ambassador-admin\",\n  //     labels: {\n  //       \"k8s-app\": \"\",\n  //       \"pod-template-hash\": \"\",\n  //       product: \"aes\",\n  //       service: \"ambassador-admin\",\n  //       \"helm.sh/chart\": \"ambassador-6.5.17\",\n  //       \"app.kubernetes.io/name\": \"ambassador\",\n  //       \"app.kubernetes.io/part-of\": \"ambassador\",\n  //       \"app.kubernetes.io/instance\": \"ambassador\",\n  //       \"app.kubernetes.io/managed-by\": \"Helm\",\n  //       \"service.kubernetes.io/headless\": \"\",\n  //       \"app.kubernetes.io/component\": \"\",\n  //       provider: \"\",\n  //       component: \"\",\n  //     },\n  //     selfLink: \"/api/v1/namespaces/ambassador/services/ambassador-admin\",\n  //     namespace: \"ambassador\",\n  //     annotations: {\n  //       \"kubectl.kubernetes.io/last-applied-configuration\": \"\",\n  //       \"meta.helm.sh/release-name\": \"ambassador\",\n  //       \"meta.helm.sh/release-namespace\": \"ambassador\",\n  //       \"a8r.io/ignore\": \"\",\n  //       \"app.getambassador.io/description\": \"\",\n  //       \"app.getambassador.io/owner\": \"\",\n  //       \"endpoints.kubernetes.io/last-change-trigger-time\":\n  //         \"0001-01-01T00:00:00Z\",\n  //       \"sidecar.istio.io/inject\": \"\",\n  //       \"consul.hashicorp.com/connect-inject\": \"\",\n  //     },\n  //     generateName: \"\",\n  //     ownerReferences: null,\n  //     resourceVersion: \"520\",\n  //     creationTimestamp: \"2021-02-01T19:39:33Z\",\n  //   },\n  //   apiVersion: \"v1\",\n  // };\n\n  let config = {\n    method: \"get\",\n    url: `http://localhost:8080/part?id=${part}`,\n    headers: {}\n  };\n  useEffect(() => {\n    axios(config).then(function (response) {\n      setData(response.data);\n      setLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(JsonToTable, {\n        json: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Component2, \"Wy1U1MeUUYvDlT7N+uvWi2fu5GQ=\");\n\n_c = Component2;\nexport default Component2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Component2\");","map":{"version":3,"names":["React","useState","useEffect","JsonToTable","axios","Component2","data","setData","loading","setLoading","config","method","url","part","headers","then","response","catch","error","console","log"],"sources":["/Users/juan.acuna/Code/go-react-challenge/src/frontend/src/components/Component2.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { JsonToTable } from \"react-json-to-table\";\nimport axios from \"axios\";\n\nconst Component2 = () => {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  // const myJson = {\n  //   kind: \"Service\",\n  //   spec: {\n  //     hostname: \"\",\n  //     selector: {\n  //       \"app.kubernetes.io/name\": \"ambassador\",\n  //       \"app.kubernetes.io/instance\": \"ambassador\",\n  //       matchLabels: {\n  //         hostname: \"\",\n  //       },\n  //     },\n  //     tlsSecret: {\n  //       name: \"\",\n  //     },\n  //     previewUrl: {\n  //       enabled: false,\n  //     },\n  //     acmeProvider: {\n  //       email: \"\",\n  //       authority: \"\",\n  //       registration: \"\",\n  //       privateKeySecret: {\n  //         name: \"\",\n  //       },\n  //     },\n  //     ambassador_id: null,\n  //     type: \"ClusterIP\",\n  //     ports: [\n  //       {\n  //         name: \"ambassador-admin\",\n  //         port: 8877,\n  //         protocol: \"TCP\",\n  //         containerPort: 0,\n  //         targetPort: \"admin\",\n  //         nodePort: 0,\n  //       },\n  //     ],\n  //     clusterIP: \"10.43.37.77\",\n  //     sessionAffinity: \"None\",\n  //     externalTrafficPolicy: \"\",\n  //     proto: \"\",\n  //     auth_service: \"\",\n  //     service: \"\",\n  //     volumes: null,\n  //     nodeName: \"\",\n  //     priority: 0,\n  //     dnsPolicy: \"\",\n  //     containers: null,\n  //     tolerations: null,\n  //     nodeSelector: {\n  //       \"beta.kubernetes.io/os\": \"\",\n  //     },\n  //     restartPolicy: \"\",\n  //     schedulerName: \"\",\n  //     serviceAccount: \"\",\n  //     securityContext: {\n  //       capabilities: {\n  //         add: null,\n  //         drop: null,\n  //       },\n  //       readOnlyRootFilesystem: false,\n  //       allowPrivilegeEscalation: false,\n  //       runAsUser: 0,\n  //     },\n  //     enableServiceLinks: false,\n  //     serviceAccountName: \"\",\n  //     terminationGracePeriodSeconds: 0,\n  //     affinity: {\n  //       podAntiAffinity: {\n  //         preferredDuringSchedulingIgnoredDuringExecution: null,\n  //       },\n  //     },\n  //     config: {\n  //       cepc: {\n  //         label: \"\",\n  //         address: \"\",\n  //         enabled: false,\n  //         account_id: \"\",\n  //       },\n  //     },\n  //     rewrite: \"\",\n  //     prefix: \"\",\n  //     prefix_regex: false,\n  //     regex_rewrite: {\n  //       pattern: \"\",\n  //       substitution: \"\",\n  //     },\n  //     add_response_headers: {\n  //       \"cache-control\": {\n  //         value: \"\",\n  //         append: false,\n  //       },\n  //     },\n  //   },\n  //   status: {\n  //     state: \"\",\n  //     tlsCertificateSource: \"\",\n  //     phase: \"\",\n  //     podIP: \"\",\n  //     hostIP: \"\",\n  //     podIPs: null,\n  //     qosClass: \"\",\n  //     startTime: \"0001-01-01T00:00:00Z\",\n  //     conditions: null,\n  //     containerStatuses: null,\n  //     loadBalancer: {},\n  //   },\n  //   metadata: {\n  //     uid: \"38cd6a7f-c3f0-4902-8cbb-b8fa628e44bd\",\n  //     name: \"ambassador-admin\",\n  //     labels: {\n  //       \"k8s-app\": \"\",\n  //       \"pod-template-hash\": \"\",\n  //       product: \"aes\",\n  //       service: \"ambassador-admin\",\n  //       \"helm.sh/chart\": \"ambassador-6.5.17\",\n  //       \"app.kubernetes.io/name\": \"ambassador\",\n  //       \"app.kubernetes.io/part-of\": \"ambassador\",\n  //       \"app.kubernetes.io/instance\": \"ambassador\",\n  //       \"app.kubernetes.io/managed-by\": \"Helm\",\n  //       \"service.kubernetes.io/headless\": \"\",\n  //       \"app.kubernetes.io/component\": \"\",\n  //       provider: \"\",\n  //       component: \"\",\n  //     },\n  //     selfLink: \"/api/v1/namespaces/ambassador/services/ambassador-admin\",\n  //     namespace: \"ambassador\",\n  //     annotations: {\n  //       \"kubectl.kubernetes.io/last-applied-configuration\": \"\",\n  //       \"meta.helm.sh/release-name\": \"ambassador\",\n  //       \"meta.helm.sh/release-namespace\": \"ambassador\",\n  //       \"a8r.io/ignore\": \"\",\n  //       \"app.getambassador.io/description\": \"\",\n  //       \"app.getambassador.io/owner\": \"\",\n  //       \"endpoints.kubernetes.io/last-change-trigger-time\":\n  //         \"0001-01-01T00:00:00Z\",\n  //       \"sidecar.istio.io/inject\": \"\",\n  //       \"consul.hashicorp.com/connect-inject\": \"\",\n  //     },\n  //     generateName: \"\",\n  //     ownerReferences: null,\n  //     resourceVersion: \"520\",\n  //     creationTimestamp: \"2021-02-01T19:39:33Z\",\n  //   },\n  //   apiVersion: \"v1\",\n  // };\n  let config = {\n    method: \"get\",\n    url: `http://localhost:8080/part?id=${part}`,\n    headers: {},\n  };\n  useEffect(() => {\n    axios(config)\n      .then(function (response) {\n        setData(response.data);\n        setLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <div>\n          <JsonToTable json={data} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Component2;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC,CAFuB,CAGviCAAgCC,IAAK,EAFhC;IAGXC,OAAO,EAAE;EAHE,CAAb;EAKAZ,SAAS,CAAC,MAAM;IACdE,KAAK,CAACM,MAAD,CAAL,CACGK,IADH,CACQ,UAAUC,QAAV,EAAoB;MACxBT,OAAO,CAACS,QAAQ,CAACV,IAAV,CAAP;MACAG,UAAU,CAAC,KAAD,CAAV;IACD,CAJH,EAKGQ,KALH,CAKS,UAAUC,KAAV,EAAiB;MACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CAPH,EADc,CASd;EACD,CAVQ,EAUN,EAVM,CAAT;EAYA,oBACE;IAAA,UACGV,OAAO,gBACN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADM,gBAGN;MAAA,uBACE,QAAC,WAAD;QAAa,IAAI,EAAEF;MAAnB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAJJ,iBADF;AAWD,CAjLD;;GAAMD,U;;KAAAA,U;AAmLN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}